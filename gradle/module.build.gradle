if (rootProject.ext.isBuildModule) {
    //作为独立App应用运行
    apply plugin: 'com.android.application'
} else {
    //作为组件运行
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply from: rootProject.file('gradle/common.build.gradle')

android {
    compileSdkVersion rootProject.ext.android_version.compileSdkVersion
    buildToolsVersion rootProject.ext.android_version.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android_version.minSdkVersion
        targetSdkVersion rootProject.ext.android_version.targetSdkVersion
        versionCode rootProject.ext.android_version.versionCode
        versionName rootProject.ext.android_version.versionName
        consumerProguardFiles 'consumer-rules.pro'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        ndk {
            // 添加项目所需CPU类型的最小集
            abiFilters "armeabi-v7a" //, "armeabi","x86"
        }

    }
    /*signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile rootProject.file('keystore/jkzaaaa.jks')
            storePassword '123456'
        }
    }*/
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main {
            if (rootProject.ext.isBuildModule) {
                //在main文件夹下建立alone文件夹，下面可以放java文件，资源文件等测试文件
                //这里进行设置使用单独运行还是合并运行的Manifest.xml
                //在main文件夹下建立debug文件夹，下面可以放java文件，资源文件等测试文件
                //这里进行设置使用单独运行还是合并运行的Manifest.xml,
                if (file('src/main/alone/AndroidManifest.xml').exists()) {
                    manifest.srcFile 'src/main/alone/AndroidManifest.xml'
                } else {
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                }
                java.srcDirs = ['src/main/alone/java',
                                'src/main/java']
                res.srcDirs = ['src/main/alone/res',
                               'src/main/res']
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java.srcDirs = ['src/main/java']
            }
        }
    }
    //开启dataBinding
    buildFeatures {
        dataBinding true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        sourceCompatibility rootProject.ext.android_version.java_version
        targetCompatibility rootProject.ext.android_version.java_version
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}